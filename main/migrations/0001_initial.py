# Generated by Django 3.2 on 2021-11-29 11:40

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AgentOfClient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(error_messages={'unique': 'Контрагент с таким именем уже существует'}, max_length=100, unique=True, verbose_name='Полное имя')),
                ('store', models.CharField(blank=True, max_length=100, null=True, verbose_name='Рынок')),
                ('phone', models.CharField(blank=True, max_length=100, null=True, verbose_name='Телефон')),
                ('address', models.CharField(blank=True, max_length=100, null=True, verbose_name='Адрес')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Дополнительная информация о контрагенте')),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clientID', models.IntegerField(blank=True, error_messages={'required': 'Поле обязательно для заполнения', 'unique': 'Клиент с таким ID уже существует'}, null=True, unique=True, verbose_name='ID клиента')),
                ('fullname', models.CharField(error_messages={'required': 'Поле обязательно для заполнения', 'unique': 'Такой клиент уже существует'}, max_length=200, unique=True, verbose_name='Полное имя')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Телефон')),
                ('type', models.IntegerField(choices=[(1, 'Грузополучатель'), (2, 'Грузоотправитель')], verbose_name='Тип')),
                ('inn', models.IntegerField(blank=True, null=True, verbose_name='ИНН')),
                ('okpo', models.CharField(blank=True, max_length=100, null=True, verbose_name='ОКПО')),
                ('code', models.CharField(blank=True, max_length=50, null=True, verbose_name='Код')),
                ('store', models.CharField(blank=True, max_length=100, null=True, verbose_name='рынок')),
                ('row', models.CharField(blank=True, max_length=100, null=True, verbose_name='ряд')),
                ('container', models.CharField(blank=True, max_length=100, null=True, verbose_name='контейнер')),
                ('address', models.CharField(blank=True, max_length=100, null=True, verbose_name='Адрес')),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.BigIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employeeID', models.IntegerField(error_messages={'unique': 'ID сотрудника уже существует'}, unique=True, verbose_name='ID сотрудника')),
                ('fullname', models.CharField(error_messages={'unique': 'Сотрудник с таким именем уже существует'}, max_length=200, unique=True, verbose_name='Полное имя')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Телефон')),
                ('address', models.CharField(blank=True, max_length=256, null=True, verbose_name='Адрес')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Дополнительная информация о сотруднике')),
                ('salary', models.FloatField(blank=True, null=True, verbose_name='Оклад')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(error_messages={'required': 'Название обязательно для заполнения'}, max_length=200, verbose_name='Название')),
                ('code', models.BigIntegerField(error_messages={'required': 'Код обязателен для заполнения', 'unique': 'Такой код продукта уже существует в системе'}, unique=True, verbose_name='Код')),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='StoreOfClient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('store', models.CharField(max_length=100, verbose_name='рынок')),
                ('row', models.CharField(blank=True, max_length=100, null=True, verbose_name='ряд')),
                ('container', models.CharField(blank=True, max_length=100, null=True, verbose_name='контейнер')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.city', verbose_name='город')),
                ('client_store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.client')),
            ],
        ),
        migrations.CreateModel(
            name='SendersOfClient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_sender', to='main.client')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender', to='main.client')),
            ],
        ),
    ]
